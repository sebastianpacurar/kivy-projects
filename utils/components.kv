<AppBtn>:
    size_hint: None, None
    width: self.texture_size[0] + dp(20)
    height: self.texture_size[1] + dp(10)
    font_size: sp(18)
    background_color: 3/255, 218/255, 198/255, 1
    color: 1, 1, 1, 1
    font_name: 'assets/fonts/Roboto/Roboto-Medium.ttf'


<AppLabel>:
    color: 0, 0, 0, 1
    size_hint: None, None
    canvas.before:
        Color:
            rgba: root.bg_color
        Rectangle:
            pos: self.pos
            size: self.size


<Filler@Widget>:


<TopBar>:
    orientation: 'horizontal'
    size_hint_y: None
    height: dp(50)
    padding: dp(10)
    canvas.before:
        Color:
            rgba: 125/255, 254/255, 227/255, 1
        Rectangle:
            pos: self.pos
            size: self.size
    AppBtn:
        text: '<'
        on_release: app.nav_to_home()
    AppLabel:
        text: root.project_name
        font_size: sp(24)
        size_hint_x: 1  # take the remaining horizontal space
        size_hint_y: 1  # match parent height
        halign: 'center'
        valign: 'middle'
        text_size: self.size  # ensure the text is wrapped within its widget
#        bg_color: [1, 0, 0, .5]


<LabeledNumericInput>:
    size_hint: None, None
    width: root.container_width
    height: 80

    BoxLayout:
        orientation: 'vertical'
        size_hint: 1, 1

        AppLabel:
            size_hint_y: None
            height: self.parent.height / 3
            text: root.label_txt

        TextInput:
            id: text_input
            size_hint_y: None
            height: self.parent.height / 2.25
            font_size: sp(18)
            foreground_color: 0, 0, 0, 1
            background_color: 1, 1, 1, 1
            cursor_color: 0, 0, 0, 1
            padding: [10, 5, 2.5, 2.5]
            multiline: False
            write_tab: False
            readonly: root.is_readonly
            disabled: root.is_readonly
            on_focus: self.text = "0" if not self.focus and len(self.text) == 0 else self.text

<RV>:
    RecycleBoxLayout:
        orientation: 'vertical'
        default_size: None, dp(72)
        default_size_hint: 1, None
        color: (0, 0.7, 0.4, 0.8)
        size_hint_y: None
        height: self.minimum_height


<SimpleDropdown>:
    size_hint: None, None
    width: self.width
    height: self.texture_size[1] + dp(10)
    text: 'Select an option'
    values: root.options


<AutoSuggestionInputBox>:
    orientation: 'vertical'
    size_hint_y: None
    height: self.minimum_height

    TextInput:
        id: input_field
        multiline: False
        size_hint_y: None
        height: 40
        write_tab: False
        on_text: root.filter_options(self.text)
        on_focus: root.show_options(self.focus)

    ScrollView:
        id: dropdown
        size_hint_y: None
        height: 200
        do_scroll_x: False
        do_scroll_y: True

        GridLayout:
            id: options_layout
            cols: 1
            size_hint_y: None
            height: self.minimum_height


<AutoSuggestionInputOption>:
    size_hint_y: None
    height: 40
    background_normal: ''
    background_color: 0.05, 0.3, 0.5, 1
    color: 1, 1, 1, 1
    font_size: sp(15)

    #apply border
    canvas.before:
        Color:
            rgba: 0.07, 0.4, 0.7, 1
        Line:
            width: 2
            rectangle: self.x, self.y, self.width, self.height


<SegmentedButton>:
    disabled: self.state == 'down'
    background_disabled_down: self.background_down
    background_disabled_normal: self.background_normal
    disabled_color: 1, 1, 1, 1
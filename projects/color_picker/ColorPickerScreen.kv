<ColorPickerScreen>:
    name: 'ColorPickerScreen'
    color_picker: color_picker
    saved_colors_count: len(color_picker.saved_colors) # listener to trigger db_table rv.data

    BoxLayout:
        orientation: 'vertical'

        TopBar:
            id: top_bar
            project_name: 'Color Picker'

        BoxLayout:
            orientation: 'vertical'
            padding: dp(10)
            spacing: 10
            canvas.before:
                Color:
                    rgba: app.rgb_formatter([250, 235, 215, 255])
                Rectangle:
                    pos: self.pos
                    size: self.size

            BoxLayout:
                size_hint_y: None
                height: self.minimum_height
                pos_hint: {'center_x': .5, 'center_y': .5}
                canvas.before:
                    Color:
                        rgba: app.rgb_formatter([180, 180, 180, 255])
                    Rectangle:
                        pos: self.x - dp(10), self.y - dp(10)
                        size: self.width + dp(20), self.height + dp(20)
                ColorPickerWidget:
                    id: color_picker

            GridLayout:
                cols: 2

                # table/grid of CSS4 colors
                BoxLayout:
                    orientation: 'vertical'
                    spacing: dp(10)
                    padding: [0, 0, dp(7.5), 0]
                    BoxLayout:
                        orientation: 'horizontal'
                        size_hint: 1, None
                        height: self.minimum_height + dp(7.5)
                        padding: [dp(10), 0]
                        canvas.before:
                            Color:
                                rgba: app.rgb_formatter([80, 200, 120, 255], lighten=True, factor=0.6)
                            Rectangle:
                                pos: self.x - dp(10), self.y
                                size: self.width + dp(20), self.height

                        BaseLabel:
                            size_hint: 1, None
                            height: toggle_layout_btn.height
                            pos_hint: {'center_y': .5}
                            text: 'CSS 4 colors, commonly known as the X11 color set'
                            text_size: self.width - dp(20), None
                            halign: 'center'
                            valign: 'middle'

                        IconButton:
                            id: toggle_layout_btn
                            pos_hint: {'center_y': .5}
                            icon: app.get_icon('grid-large')
                            label_text: 'Grid'
                            on_release: root.toggle_layout()

                    ResponsiveGridView:
                        id: responsive_grid
                        view_class: 'ColorCard'
                        item_width: dp(60)
                        item_spacing: dp(20)

                    TableView:
                        id: table_view
                        view_class: 'ColorRowItem'
                        column_widths: [0, 0, 0, 0]
                        column_names: ['Name', 'Color', 'Rgb', 'Hex']

                Splitter:
                    id: splitter
                    sizable_from: 'left'
                    min_size: root.width * .25
                    max_size: root.width * .75

                    # Saved colors content
                    BoxLayout:
                        orientation: 'vertical'
                        spacing: dp(20)
                        padding: [dp(7.5), 0, 0, 0]
                        BoxLayout:
                            orientation: 'horizontal'
                            size_hint: None, None
                            width: splitter.width
                            height: self.minimum_height + dp(7.5)
                            padding: [dp(10), 0]
                            canvas.before:
                                Color:
                                    rgba: app.rgb_formatter([80, 200, 120, 255], lighten=True, factor=0.6)
                                Rectangle:
                                    pos: self.x - dp(8), self.y
                                    size: self.width + dp(20), self.height

                            BaseLabel:
                                size_hint: 1, None
                                height: toggle_layout_btn.height
                                pos_hint: {'center_y': .5}
                                text: 'Saved colors'
                                text_size: self.width - dp(20), None
                                halign: 'center'
                                valign: 'middle'

                        TableView:
                            id: db_table_view
                            view_class: 'SavedColorRowItem'
                            column_widths: [0, 0, 0, dp(30)]
                            column_names: ['Color', 'Rgb', 'Hex', '']

<ColorCard>:
    canvas.before:
        Color:
            rgba: app.rgb_formatter(root.rgb)
        Rectangle:
            size: self.size
            pos: self.pos
        Color:
            rgba: app.rgb_formatter([0, 0, 0, 255], factor=0.5, darken=True)
        Line:
            width: dp(1)
            rectangle: (self.x, self.y, self.width, self.height)


<ColorRowItem>:
    TableViewText:
        text_val: root.name

    TableViewColor:
        color_val: app.rgb_formatter(root.rgb)

    TableViewText:
        text_val: str(root.rgb)

    TableViewText:
        text_val: root.hex

<SavedColorRowItem>:
    TableViewColor:
        color_val: app.rgb_formatter(root.rgb)

    TableViewText:
        text_val: str(root.rgb)

    TableViewText:
        text_val: root.hex

    TableViewIconButton:
        size_hint_x: None
        icon: app.get_icon('delete-forever-outline')
        btn_action: lambda i: root.delete_color_from_db()


<CountriesMainScreen>:
    name: 'CountriesMainScreen'
    BoxLayout:
        orientation: 'vertical'
        padding: 10
        spacing: 10
        canvas.before:
            Color:
                rgba: 250/255, 235/255, 215/255, 1
            Rectangle:
                pos: self.pos
                size: self.size

        ScreenManager:
            id: screen_manager
            AllCountriesScreen:
            CountryScreen:

<AllCountriesScreen>:
    name: 'AllCountriesScreen'
    GridLayout:
        orientation: 'tb-lr'
        cols: 1
        spacing: 10
        TopBar:
            id: top_bar
            project_name: 'Countries'

        SegmentedController:
            id: segmented_controller
            toggle_func: lambda i, v: root.change_displayed_region(i, v)
            button_labels: ['All', 'Antarctic', 'Americas', 'Africa', 'Europe', 'Asia', 'Oceania']
            seg_group: 'countries-region'

        SearchInputBox:
            id: search_box
            search_func: lambda i, v: root.search_data(i, v)
            search_hint_text: 'Search for a country'
            counter: len(root.data)

        PillContainer:
            id: pill_container

        ResponsiveGridView:
            id: responsive_grid
            view_class: 'CountryGridCardItem'
            item_width: dp(180)
            item_spacing: dp(10)

        TableView:
            id: table_view
            view_class: 'CountryTableRowItem'
            column_widths: [dp(150), dp(30), 0, 0, 0]
            column_names: ['Name', '', 'Region', 'Capital', 'Population']

<CountryScreen>:
    name: 'CountryScreen'

    BoxLayout:
        orientation: 'vertical'
        spacing: 10

        TopBar:
            id: top_bar
            project_name: 'Country' # will be changed during runtime
            pos_hint: {'top': 1}

        TextLabel:
            id: common_name
            text: 'test'
        TextLabel:
            id: official_name
            text: 'test'
        TextLabel:
            id: capital
            text: 'test'
        AsyncImage:
            id: flag
            size_hint: None, None
            size: self.texture_size[0], self.texture_size[1]

        Filler:


<CountryGridCardItem>:
    canvas.before:
        Color:
            rgba: [.8, .8, .8, 1]
        RoundedRectangle:
            pos: self.pos
            size: self.size
    size: root.size

    IconButton:
        bg_size_val: dp(24)
        pos_hint: {'top': 1, 'right': 1}
        icon: app.get_icon('map-marker')
        on_release: root.add_marker_to_map()

    BaseButton:
        id: country_btn
        text: root.common_name
        font_size: sp(13)
        pos_hint: {'center_x': 0.5, 'center_y': 0.7}
        on_release: root.parent.parent.parent.parent.parent.manager.get_screen('AllCountriesScreen').go_to_country_screen(self)

    AsyncImage:
        id: flag
        source: root.flag
        size_hint: None, None
        pos_hint: {'center_x': 0.5, 'center_y': 0.3}
        on_load: root.update_size(root.size, self)
        on_error: self.source = 'assets/images/img_not_found.png'


<CountryTableRowItem>:
    TableViewButton:
        size_hint_x: None
        id: table_btn
        text_val: root.common_name
        btn_action: lambda i: root.parent.parent.parent.parent.parent.manager.get_screen('AllCountriesScreen').go_to_country_screen(i)

    TableViewIconButton:
        size_hint_x: None
        icon: app.get_icon('map-marker')
        btn_action: lambda i: root.add_marker_to_map() if not root.is_pinned else root.remove_marker_from_map()

    TableViewText:
        text_val: str(root.region)

    TableViewText:
        text_val: str(root.capital)

    TableViewText:
        text_val: str(root.population)

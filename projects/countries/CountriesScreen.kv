<CountriesMainScreen>:
    name: 'CountriesMainScreen'
    BoxLayout:
        orientation: 'vertical'
        padding: 10
        spacing: 10
        canvas.before:
            Color:
                rgba: 250/255, 235/255, 215/255, 1
            Rectangle:
                pos: self.pos
                size: self.size

        ScreenManager:
            id: screen_manager
            AllCountriesScreen:
            CountryScreen:


<AllCountriesScreen>:
    name: 'AllCountriesScreen'
    BoxLayout:
        orientation: 'vertical'
        spacing: 10

        TopBar:
            id: top_bar
            project_name: 'Countries'

        SearchInputBox:
            id: search_box
            search_func: lambda i, v: root.filter_data(i, v)
            search_hint_text: 'Search for a country'
            counter: len(root.data)

        ResponsiveGridView:
            id: responsive_grid
            view_class: 'CountryGridCardItem'
            item_width: dp(280)
            item_spacing: dp(20)

        TableView:
            id: table_view
            view_class: 'CountryTableRowItem'
            column_names: ['Name', 'Region', 'Capital', 'Population']


<CountryScreen>:
    name: 'CountryScreen'

    BoxLayout:
        orientation: 'vertical'
        spacing: 10

        TopBar:
            id: top_bar
            project_name: 'Country' # will be changed during runtime
            pos_hint: {'top': 1}

        TextLabel:
            id: common_name
            text: 'test'
        TextLabel:
            id: official_name
            text: 'test'
        TextLabel:
            id: capital
            text: 'test'
        AsyncImage:
            id: flag
            size_hint: None, None
            size: self.texture_size[0], self.texture_size[1]

        Filler:


<CountryGridCardItem>:
    canvas.before:
        Color:
            rgba: root.card_bg_color
        RoundedRectangle:
            pos: self.pos
            size: self.size
    size: root.size

    IconButton:
        id: pin_btn
        pos_hint: {'top': 1, 'right': 1}
        icon: app.get_icon('map-marker') if not root.is_pinned else app.get_icon('map-marker-off')
        on_release: root.add_marker_to_map() if not root.is_pinned else root.remove_marker_from_map()

    BaseButton:
        id: btn
        text: root.common_name
        font_size: sp(13)
        pos_hint: {'center_x': 0.5, 'center_y': 0.7}
        on_release: root.parent.parent.parent.parent.parent.manager.get_screen('AllCountriesScreen').go_to_country_screen(root.common_name)
    AsyncImage:
        id: flag
        source: root.flag
        size_hint: None, None
        pos_hint: {'center_x': 0.5, 'center_y': 0.3}
        on_load: root.update_size(root.size, self)
        on_error: self.source = 'assets/images/img_not_found.png'


<CountryTableRowItem>:
    size_hint: 1, None
    height: 40
    orientation: 'horizontal'
    canvas.before:
        Color:
            rgba: root.row_color
        Rectangle:
            pos: self.pos
            size: self.size

    BaseButton:
        id: btn
        size_hint_x: 1
        text: root.common_name
        font_size: sp(13)
        pos_hint: {'center_x': 0.5, 'center_y': 0.5}
        on_release: root.parent.parent.parent.parent.parent.manager.get_screen('AllCountriesScreen').go_to_country_screen(root.common_name)

    IconButton:
        id: pin_btn
        size: dp(20), dp(20)
        font_size: sp(15)
        pos_hint: {'center_x': .5, 'center_y': .5}
        icon: app.get_icon('map-marker') if not root.is_pinned else app.get_icon('map-marker-off')
        on_release: root.add_marker_to_map() if not root.is_pinned else root.remove_marker_from_map()

    TextLabel:
        size_hint_x: 1
        font_size: sp(15)
        text: root.region
        pos_hint: {'center_y': .5}
    TextLabel:
        size_hint_x: 1
        font_size: sp(15)
        text: root.capital
        pos_hint: {'center_y': .5}
    TextLabel:
        size_hint_x: 1
        font_size: sp(15)
        text: str(root.population)
        pos_hint: {'center_y': .5}




<BaseButton>:
    size_hint: None, None
    width: self.texture_size[0] + dp(20)
    height: self.texture_size[1] + dp(10)
    font_size: sp(18)
    background_color: 0.01176, 0.8549, 0.7765, 1
    color: 1, 1, 1, 1
    font_name: 'roboto-medium'

<BaseLabel>:
    color: 0, 0, 0, 1
    size_hint: None, None
    font_name: 'roboto-medium'
    canvas.before:
        Color:
            rgba: root.bg_color
        Rectangle:
            pos: self.pos
            size: self.size

<TextLabel>:
    size: self.texture_size[0], self.texture_size[1]

<BaseTextInput@TextInput>:
    size_hint_y: None
    font_size: sp(18)
    foreground_color: 0, 0, 0, 1
    background_color: 1, 1, 1, 1
    cursor_color: 0, 0, 0, 1
    padding: [10, 5, 2.5, 2.5]
    multiline: False
    write_tab: False


<Filler@Widget>:


<SegmentedButton>:
    disabled: self.state == 'down'
    background_disabled_down: self.background_down
    background_disabled_normal: self.background_normal
    disabled_color: 1, 1, 1, 1


<SegmentedController>:
    GridLayout:
        orientation: 'tb-lr' if root.direction == 'vertical' else 'lr-tb'
        size_hint_y: None
        height: dp(25)
        spacing: 1

        # example of button:
#        SegmentedButton:
#            text: 'Length'
#            group: 'unit_converters'
#            on_state: root.change_unit_screen(self, 'LengthScreen')
#            state: 'down'
#            option_index: 0